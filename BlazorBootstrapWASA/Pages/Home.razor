@page "/"
@using BlazorBootstrapWASA.Services
@inject HttpClient Http
@inject ThemeProvider ThemeProvider
@inject IJSRuntime JS

<h1>Lorem Ipsum</h1>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed viverra, nisl at pulvinar porttitor, purus lectus vehicula odio, nec vehicula elit dui at massa.</p>
<p>Praesent euismod, nibh nec bibendum consequat, est sapien ultricies urna, id ultrices mauris turpis sed augue.</p>

<ThemePicker />

<h2>Weather in Warsaw</h2>
@if (weather == null)
{
    <p>Loading weather data...</p>
}
else
{
    <table class="table table-striped theme-table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temperature (°C)</th>
                <th>Humidity (%)</th>
                <th>Pressure (mb)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var w in weather)
            {
                <tr>
                    <td>@w.Date</td>
                    <td>@w.Temperature</td>
                    <td>@w.Humidity</td>
                    <td>@w.Pressure</td>
                    <td>@w.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

<h2>More Info (Accordion)</h2>
<div class="accordion mb-4" id="demoAccordion">
    @for (int i = 1; i <= 3; i++)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="heading@i">
                <button class="accordion-button @(i != 1 ? "collapsed" : "")"
                        type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapse@i" aria-expanded="@(i == 1 ? "true" : "false")"
                        aria-controls="collapse@i">
                    Accordion Item #@i
                </button>
            </h2>
            <div id="collapse@i"
                 class="accordion-collapse collapse @(i == 1 ? "show" : "")"
                 aria-labelledby="heading@i" data-bs-parent="#demoAccordion">
                <div class="accordion-body">
                    This is the body of item #@i.
                </div>
            </div>
        </div>
    }
</div>

@* Bootstrap accordion usage :contentReference[oaicite:1]{index=1} *@

<h2>Theme Cards</h2>
<div class="row mb-4">
  @foreach (var t in new[] { "Light", "Dark", "Blue" })
  {
    <div class="col-md-4 mb-3">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">@t Theme</h5>
          <p class="card-text">Apply the @t theme via Blazor.</p>
          <button class="btn btn-primary" @onclick="() => ApplyTheme(t)">
            Apply @t
          </button>
        </div>
      </div>
    </div>
  }
</div>
@* Bootstrap cards demonstration :contentReference[oaicite:2]{index=2} *@

<h2>Choose a City</h2>
<ul class="list-group mb-3">
  @foreach (var city in new[] { "Warsaw", "Kraków", "Gdańsk" })
  {
    <li class="list-group-item @(city == selectedCity ? "active" : "")"
        @onclick="() => selectedCity = city">
      @city
    </li>
  }
</ul>
<p>Selected city: <strong>@selectedCity</strong></p>
@* Bootstrap list group with active state :contentReference[oaicite:3]{index=3} *@

@code {
    private List<WeatherData>? weather;
    private string selectedCity = "Warsaw";

    protected override async Task OnInitializedAsync()
    {
        weather = await Http.GetFromJsonAsync<List<WeatherData>>("sample-data/weather.json");
    }

    void ApplyTheme(string themeName)
    {
        ThemeProvider.SetTheme($"theme-{themeName.ToLower()}.css");
        JS.InvokeVoidAsync("setBootstrapTheme", themeName.ToLower());
    }

    public class WeatherData
    {
        public string Date { get; set; } = default!;
        public int Temperature { get; set; }
        public int Humidity { get; set; }
        public int Pressure { get; set; }
        public string Summary { get; set; } = default!;
    }
}
